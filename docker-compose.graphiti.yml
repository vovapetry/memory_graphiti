version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.26.2
    container_name: graphiti-neo4j
    ports:
      - "7474:7474"  # HTTP Web Interface
      - "7687:7687"  # Bolt Protocol
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/graphiti_neo4j_2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_max__size=2G
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - graphiti-network
    restart: unless-stopped

  # Graphiti FastAPI Service
  graphiti:
    build:
      context: ./graphiti
      dockerfile: Dockerfile
    container_name: graphiti-service
    ports:
      - "8000:8000"  # FastAPI server
    env_file:
      - ./graphiti/.env
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=graphiti_neo4j_2024
      - PORT=8000
      - db_backend=neo4j
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - graphiti-network
    restart: unless-stopped

volumes:
  neo4j_data:
    name: graphiti-neo4j-data
  neo4j_logs:
    name: graphiti-neo4j-logs

networks:
  graphiti-network:
    name: graphiti-network
    driver: bridge
